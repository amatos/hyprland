bind = $mainMod Ctrl, S, togglespecialworkspace, # [hidden]
bind = Alt, Tab, cyclenext # [hidden] sus keybind
bind = Alt, Tab, bringactivetotop, # [hidden] bring it to the top

# Log me out
bind = Ctrl+Shift+Alt, Delete, exec, pkill wlogout || wlogout -p layer-shell # [hidden]
bind = $mainMod, Escape, exec, pkill wlogout || wlogout -p layer-shell # [hidden]

# Color picker
bind = $mainMod Shift, C, exec, hyprpicker -a # Pick color (Hex) >> clipboard

# Lock session
bind = $mainMod, L, exec, loginctl lock-session # Lock

# Kill active window
bind = $mainMod, Q, killactive,

bind = $mainMod SHIFT, Q, exit,

# Testing
bind = $mainMod Alt, f12, exec, notify-send 'Test notification' "Here's a really long message to test truncation and wrapping\nYou can middle click or flick this notification to dismiss it!" -a 'Shell' -A "Test1=I got it!" -A "Test2=Another action" -t 5000 # [hidden]
bind = $mainMod Alt, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind' # [hidden]

####  Applications

# Launch a terminal
bind = $mainMod, T, exec, $term # Launch kitty (terminal)
bind = $mainMod, Return, exec, $term # Launch kitty (terminal)

# Launch Zed (editor)
bind = $mainMod, Z, exec, zeditor # Launch Zed (editor)

# Launch Nautilus
bind = $mainMod SHIFT, E, exec, $files --new-window # Launch Nautilus (file manager)

# Launch Firefox
bind = $mainMod, W, exec, firefox # Launch Firefox (browser)

# Clipboard History
bind = $mainMod, V, exec, pkill fuzzel || cliphist list | fuzzel --match-mode fzf --dmenu | cliphist decode | wl-copy # Clipboard history >> clipboard

# Volume control and EasyEffects mixer
bind = $mainMod Ctrl, V, exec, pavucontrol # Launch pavucontrol (volume mixer)
bind = $mainMod Ctrl Shift, V, exec, easyeffects # Launch EasyEffects (equalizer & other audio effects)

#bind = CTRL SHIFT, R, exec, ags -q # Restart AGS
#bind = CTRL, Escape, exec, walker --modules applications
#bind = CTRL, Escape, exec, ags -t launcher
bind = Alt, Space, exec, fuzzel --filter-desktop --layer top

bind = $mainMod SHIFT CTRL, Z , togglefloating


# Volume and Media Control
bindl = , xf86audioraisevolume, exec, $volume --inc
bindl = , xf86audiolowervolume, exec, $volume --dec
bindl = , xf86audiomute, exec, $volume --toggle
bindl = , xf86monbrightnessup, exec, $brightness --inc
bindl = , xf86monbrightnessdown, exec, $brightness --dec
bindl = , xf86audioplay, exec, playerctl play-pause
bindl = , xf86audionext, exec, playerctl next
bindl = , xf86audioprev, exec, playerctl previous

# Backlight control
bind = $mainMod SHIFT, equal, submap, backlight
submap = backlight
bind = , equal, exec, $backlight --inc
bind = , minus, exec, $backlight --dec
bind = , K, exec, $backlight --inc
bind = , J, exec, $backlight --dec
bind = , up, exec, $backlight --inc
bind = , down, exec, $backlight --dec
bind = , escape, submap, reset
submap = reset

# Volume control
bind = $mainMod, equal, submap, volume
submap = volume
bind = , equal, exec, $volume --inc
bind = , minus, exec, $volume --dec
bind = , K, exec, $volume --inc
bind = , J, exec, $volume --dec
bind = , up, exec, $volume --inc
bind = , down, exec, $volume --dec
bind = , 0, exec, $volume --toggle
bind = , 9, exec, $volume --toggle-mic
bind = , escape, submap, reset
submap = reset

# Screenshots
bind = , Print, submap, screenshot
submap = screenshot
bind = , 1, exec, $scriptsDir/grimblast -n copysave screen
bind = , 1, submap, reset
bind = , 2, exec, $scriptsDir/grimblast -n copysave output
bind = , 2, submap, reset
bind = , 3, exec, $scriptsDir/grimblast -n copysave active
bind = , 3, submap, reset
bind = , 4, exec, $scriptsDir/grimblast -n copysave area
bind = , 4, submap, reset
bind = , escape, submap, reset
submap = reset
bind = SHIFT, Print, exec, $scriptsDir/grimblast -n copy output

# Resize
bind = $mainMod SHIFT, R, submap, resize
submap = resize
binde = , H, resizeactive,-50 0
binde = , L, resizeactive,50 0
binde = , K, resizeactive,0 -50
binde = , J, resizeactive,0 50
binde = , left, resizeactive,-50 0
binde = , right, resizeactive,50 0
binde = , up, resizeactive,0 -50
binde = , down, resizeactive,0 50
bind = , escape, submap, reset
submap = reset

# Move
bind = $mainMod SHIFT, M, submap, move
submap = move
bind = , H, movewindow, l
bind = , L, movewindow, r
bind = , K, movewindow, u
bind = , J, movewindow, d
bind = , left, movewindow, l
bind = , right, movewindow, r
bind = , up, movewindow, u
bind = , down, movewindow, d
# bind = , period, exec, hyprctl dispatch movewindow mon:0
# bind = , comma, exec, hyprctl dispatch movewindow mon:1
bind = , escape, submap, reset
submap = reset

# Focus
bind = $mainMod SHIFT, F, submap, focus
submap = focus
bind = , left, movefocus, l
bind = , right, movefocus, r
bind = , up, movefocus, u
bind = , down, movefocus, d
bind = , H, movefocus, l
bind = , L, movefocus, r
bind = , K, movefocus, u
bind = , J, movefocus, d
bind = , escape, submap, reset
submap = reset
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r

# Preselection split ONLY IN DWINDLE mode
bind = $mainMod, S, submap, split
submap = split
bind = , J, exec, hyprctl dispatch layoutmsg "preselect d"
bind = , J, submap, reset
bind = , K, exec, hyprctl dispatch layoutmsg "preselect u"
bind = , K, submap, reset
bind = , L, exec, hyprctl dispatch layoutmsg "preselect r"
bind = , L, submap, reset
bind = , H, exec, hyprctl dispatch layoutmsg "preselect l"
bind = , H, submap, reset
bind = , escape, submap, reset
submap = reset

# Bypass global keybinds to pass binds directly to application (eg: VMs)
bind = $mainMod CTRL, Grave, submap, passthru
submap = passthru
bind = $mainMod, Escape, submap, reset
submap = reset

# Special workspaces
bind = $mainMod SHIFT, U, split:movetoworkspace, special:terminal
bind = $mainMod, U, togglespecialworkspace, terminal
bind = $mainMod SHIFT, Backspace, split:movetoworkspace, special:steam
bind = $mainMod, Backspace, togglespecialworkspace, steam
bind = $mainMod, P, togglespecialworkspace, 1password
bind = $mainMod SHIFT, Delete, split:movetoworkspace, special:trash
bind = $mainMod, Delete, togglespecialworkspace, trash
bind = $mainMod SHIFT, O, split:movetoworkspace, special:whatsapp
bind = $mainMod, O, togglespecialworkspace, whatsapp
bind = ALT, Q, togglespecialworkspace, clipse

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, split:workspace, 1
bind = $mainMod, 2, split:workspace, 2
bind = $mainMod, 3, split:workspace, 3
bind = $mainMod, 4, split:workspace, 4
bind = $mainMod, 5, split:workspace, 5
bind = $mainMod, 6, split:workspace, 6
bind = $mainMod, 7, split:workspace, 7
bind = $mainMod, 8, split:workspace, 8
bind = $mainMod, 9, split:workspace, 9
# bind = $mainMod, 0, split:workspace, 10
# bind = $mainMod, Grave, split:workspace, empty # The key before '1' (backtick/tilde)
bind = $mainMod CTRL, Right, split:workspace, +1
bind = $mainMod CTRL, Left, split:workspace, -1

# Move active window and follow to workspace
bind = $mainMod CTRL, 1, split:movetoworkspace, 1
bind = $mainMod CTRL, 2, split:movetoworkspace, 2
bind = $mainMod CTRL, 3, split:movetoworkspace, 3
bind = $mainMod CTRL, 4, split:movetoworkspace, 4
bind = $mainMod CTRL, 5, split:movetoworkspace, 5
bind = $mainMod CTRL, 6, split:movetoworkspace, 6
bind = $mainMod CTRL, 7, split:movetoworkspace, 7
bind = $mainMod CTRL, 8, split:movetoworkspace, 8
bind = $mainMod CTRL, 9, split:movetoworkspace, 9
# bind = $mainMod CTRL, 0, split:movetoworkspace, 10
bind = $mainMod CTRL, Grave, split:movetoworkspace, empty
bind = $mainMod CTRL, bracketleft, split:movetoworkspace, -1
bind = $mainMod CTRL, bracketright, split:movetoworkspace, +1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, split:movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, split:movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, split:movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, split:movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, split:movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, split:movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, split:movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, split:movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, split:movetoworkspacesilent, 9
# bind = $mainMod SHIFT, 0, split:movetoworkspacesilent, 10
bind = $mainMod SHIFT, Grave, split:movetoworkspacesilent, empty
bind = $mainMod SHIFT, bracketleft, split:movetoworkspacesilent, -1
bind = $mainMod SHIFT, bracketright, split:movetoworkspacesilent, +1

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, split:workspace, e+1
bind = $mainMod, mouse_up, split:workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
# mouse:272 = left
# mouse:273 = right
# mouse:274 = middle
# mouse:275 = side
# mouse:276 = extra
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
# bind = $mainMod, mouse:274, togglefloating
# bindm = , mouse:275, movewindow
# bindm = , mouse:276, resizewindow

# The second bind is redundant but I'm used to it in DWM
bind = $mainMod SHIFT CTRL, comma, exec, hyprctl dispatch split:swapactiveworkspaces 1 0
bind = $mainMod SHIFT CTRL, period, exec, hyprctl dispatch split:swapactiveworkspaces 0 1
bind = $mainMod SHIFT CTRL, left, exec, hyprctl dispatch split:swapactiveworkspaces 1 0
bind = $mainMod SHIFT CTRL, right, exec, hyprctl dispatch split:swapactiveworkspaces 0 1
# bind = $mainMod SHIFT CTRL, comma, exec, hyprctl dispatch changemonitor next
# bind = $mainMod SHIFT CTRL, period, exec, hyprctl dispatch changemonitor prev

# focus monitor.
bind = $mainMod, comma, focusmonitor, l
bind = $mainMod, bracketleft, split:workspace, e-1
bind = $mainMod, period, focusmonitor, r
bind = $mainMod, bracketright, split:workspace, e+1

# move
# bind = SHIFTALT, comma, movecurrentworkspacetomonitor, l
# bind = SHIFTALT, period, movecurrentworkspacetomonitor, r

# grab rogue windows
bind = SHIFTALT, /, split:grabroguewindows
